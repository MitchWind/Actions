name: Build Plugs

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: "SSH connection to Actions"
        required: true
        default: "true"

env:
  #默认软件包
  FEEDS_CONF: Plugs.conf
  #配置文件是否存在
  IS_Plugs_CONF: false
  AUTO_SH_FILE1: "ready.sh"
  AUTO_SH_FILE2: "comply.sh"
  AUTO_SH_RUN: true

defaults:
  run:
    shell: bash

jobs:
  plugs:
    runs-on: ubuntu-latest
    name: File Verify ${{matrix.work}} ${{matrix.arch}}
    strategy:
      fail-fast: false
      matrix:
        work: [openwrt, lienol, lede]
        arch: [x86]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Check work ${{matrix.work}}
        id: check_work
        uses: andstor/file-existence-action@v1.0.1
        with:
          files: "${{matrix.work}}"

      - name: Check ${{matrix.work}} Arch ${{matrix.arch}}
        id: check_arch
        if: steps.check_work.outputs.files_exists == 'true'
        uses: andstor/file-existence-action@v1.0.1
        with:
          files: "${{matrix.work}}/${{matrix.arch}}"
        #检测插件文件是否存在
      - name: Check ${{matrix.work}} Arch ${{matrix.arch}} Plugs
        id: check_config
        if: steps.check_arch.outputs.files_exists == 'true'
        uses: andstor/file-existence-action@v1.0.1
        with:
          files: "${{matrix.work}}/${{matrix.arch}}/${{env.FEEDS_CONF}}"
      
      - name: Set Plugs Status
        if: steps.check_config.outputs.files_exists == 'true'
        run: echo "IS_Plugs_CONF=true" >> $GITHUB_ENV

        #找到必要配置文件开始设置运行环境
      - name: Install Initialization
        if: env.IS_Plugs_CONF == 'true'
        run: |
          echo "有配置文件继续后面流程"
          sudo timedatectl set-timezone "Asia/Shanghai"
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq install lftp
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "Asia/Shanghai"
      
      - name: Load ${{matrix.work}} Env
        if: env.IS_Plugs_CONF == 'true'
        run: |
          source "${GITHUB_WORKSPACE}/${{matrix.work}}/.env"
          echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
          echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
          echo "UP_WETRANSFER=${UP_WETRANSFER}" >> $GITHUB_ENV
          echo "UP_FTP=${UP_FTP}" >> $GITHUB_ENV
          if $UP_FTP =='true';then            
            echo "FTP_SERVER=${FTP_SERVER}" >> $GITHUB_ENV
            echo "FTP_USERNAME=${FTP_USERNAME}" >> $GITHUB_ENV
          fi

          echo "UP_QINIU=${UP_QINIU}" >> $GITHUB_ENV
          if $UP_QINIU =='true';then            
            echo "QINIU_SERVER=${QINIU_SERVER}" >> $GITHUB_ENV
            echo "QINIU_BUCKET=${QINIU_BUCKET}" >> $GITHUB_ENV
          fi

      - name: Clone ${{matrix.work}} source code
        if: env.IS_Plugs_CONF == 'true'
        run: |
          git clone $REPO_URL -b $REPO_BRANCH work

      - name: Copy ${{matrix.arch}} Feeds
        if: env.IS_Plugs_CONF == 'true'
        run: |
          [ -e ${{matrix.work}}/${{matrix.arch}}/${{env.FEEDS_CONF}} ] && cat ${{matrix.work}}/${{matrix.arch}}/${{env.FEEDS_CONF}} >> work/feeds.conf.default
          ls -lah
          cd work/ && git status && ls -lah
    
      - name: Update feeds
        if: env.IS_Plugs_CONF == 'true'
        working-directory: ./work
        run: ./scripts/feeds update -a

          
      - name: Install feeds
        if: env.IS_Plugs_CONF == 'true'
        working-directory: ./work
        run: ./scripts/feeds install -a

      - name: Copy ${{matrix.arch}} Config
        if: env.IS_Plugs_CONF == 'true'
        run: |
          [ -e default/${{matrix.arch}}/default.seed ] && cat default/${{matrix.arch}}/default.seed >> work/.config
          cat work/.config
          cd work/ && git status && ls -lah
          
      - name: Download ${{matrix.work}} package
        if: env.IS_Plugs_CONF == 'true'
        working-directory: ./work
        id: package
        run: |
          cat .config
          ls -lah
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Start SSH via tmate
        uses: P3TERX/ssh2actions@main
        if: env.IS_Plugs_CONF == 'true' && (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      - name: Make ${{matrix.work}} ${{matrix.arch}}
        if: env.IS_Plugs_CONF == 'true'
        id: make
        working-directory: ./work
        run: |
          echo "还没有想好怎么写"
          while read line; do 
            plugname = $(echo "$line" | awk '{print $2}')
            echo $plugname
          done < ${{matrix.work}}/${{matrix.arch}}/${{env.FEEDS_CONF}}





  Clean:
    name: Clean Jobs
    runs-on: ubuntu-latest
    needs: plugs
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 1
      - name: Remove old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '1 day'
