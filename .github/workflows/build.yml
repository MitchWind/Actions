name: Build

on:
 push:
 workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'true'

env:
#默认软件包
  FEEDS_CONF: feeds.conf.default
#默认配置文件名
  CONFIG_CONF: config.seed
#默认内核配置
  KERNEL_CONF: kconfig.seed
#默认内核宏文件名
  KERNEL_IN: kConfig.in
#是否开启内容合并
  CONF_ISMERGE: true
#是否自动生成内核宏
  KERNEL_ISMERAGE: true
#是否开启内核文件注入到配置
  IS_KERNEL_CONF: true

defaults:
  run:
    shell: bash

jobs:
  verify :
   runs-on: ubuntu-latest
   name: File Verify ${{matrix.work}} ${{matrix.arch}}
   strategy:
    fail-fast: false
    matrix:
     work: [openwrt,lienol,lede]
     arch: [x86]
   outputs:
    isWork: '{"include":["openwrt":${{env.isopenwrt}},"lede":${{env.islede}},"lienol":${{env.islienol}}]}'
   steps:
   - name: Checkout
     uses: actions/checkout@main
      
   - name: Check work ${{matrix.work}}
     id: check_work
     uses: andstor/file-existence-action@v1.0.1
     with:
      files: "${{matrix.work}}"

   - name: Check ${{matrix.work}} Arch ${{matrix.arch}}
     id: check_arch
     if: steps.check_work.outputs.files_exists == 'true'
     uses: andstor/file-existence-action@v1.0.1
     with:
      files: "${{matrix.work}}/${{matrix.arch}}"

   - name: Check ${{matrix.work}} Arch ${{matrix.arch}} Config
     id: check_config
     if: steps.check_arch.outputs.files_exists == 'true'
     uses: andstor/file-existence-action@v1.0.1
     with:
      files: "${{matrix.work}}/${{matrix.arch}}/${{env.FEEDS_CONF}}, ${{matrix.work}}/${{matrix.arch}}/${{env.CONFIG_CONF}}"
    
   
   - name: Make Config
     if: steps.check_config.outputs.files_exists == 'true'
     run: |
      if ${{env.CONF_ISMERGE}} ;then
        if [ -f ${GITHUB_WORKSPACE}/default/${{matrix.arch}}/default.seed ] ;then
          cat ${GITHUB_WORKSPACE}/default/${{matrix.arch}}/default.seed >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.config          
        fi
        #默认所有架构都需要安装的包
        if [ -f ${GITHUB_WORKSPACE}/default/default.seed ] ;then
          cat ${GITHUB_WORKSPACE}/default/default.seed >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.config          
        fi
      fi
      cat ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/${{env.CONFIG_CONF}} >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.config  
      

   - name: Make Kernel
     id: kernel
     if:  steps.check_config.outputs.files_exists == 'true' && (env.IS_KERNEL_CONF == 'true' && env.IS_KERNEL_CONF != 'false')
     run: |
      #默认
      if [ -f ${GITHUB_WORKSPACE}/default/${{env.KERNEL_CONF}} ];then 
          cat ${GITHUB_WORKSPACE}/default/${{env.KERNEL_CONF}} >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig
      fi
      if [ -f ${GITHUB_WORKSPACE}/default/${{env.KERNEL_IN}} ];then 
          cat ${GITHUB_WORKSPACE}/default/${{env.KERNEL_IN}} >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig.in
      fi
      #默认指定架构
      if [ -f ${GITHUB_WORKSPACE}/default/${{matrix.arch}}/${{env.KERNEL_CONF}} ];then 
          cat ${GITHUB_WORKSPACE}/default/${{matrix.arch}}/${{env.KERNEL_CONF}} >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig
      fi
      if [ -f ${GITHUB_WORKSPACE}/default/${{matrix.arch}}/${{env.KERNEL_IN}} ];then 
          cat ${GITHUB_WORKSPACE}/default/${{matrix.arch}}/${{env.KERNEL_IN}} >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig.in
      fi

      #指定架构
      if [ -f ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/${{env.KERNEL_CONF}} ];then 
          cat ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/${{env.KERNEL_CONF}} >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig
      fi
      if [ -f ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/${{env.KERNEL_IN}} ];then 
          cat ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/${{env.KERNEL_IN}} >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig.in          
      fi
      cat ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.config
      cp ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig.in ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/${{env.KERNEL_IN}}
   - name: Start SSH via tmate
     uses: P3TERX/ssh2actions@main
     if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
     env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

   - name: Auto ${{matrix.arch}} Kernel in
     if:  steps.check_config.outputs.files_exists == 'true' && (env.IS_KERNEL_CONF == 'true' && env.IS_KERNEL_CONF != 'false') && env.KERNEL_ISMERAGE == 'true'
     run: |
      [ -e default/kernel.sh ] && chmod +x default/kernel.sh
      echo 'kernel'
      rm -rf ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/${{env.KERNEL_IN}}
      ./default/kernel.sh ${{matrix.work}}/${{matrix.arch}}/.kConfig ${{matrix.work}}/${{matrix.arch}}/${{env.KERNEL_IN}}

   - name: 'Upload Artifact'
     
     uses: actions/upload-artifact@v2
     with:
      name: ${{matrix.work}}_${{matrix.arch}}_config
      path: |
       default/default.sh
       ${{matrix.work}}/${{matrix.arch}}/.config 
       ${{matrix.work}}/${{matrix.arch}}/${{env.KERNEL_IN}}

   - name: Make ls
     if: steps.check_config.outputs.files_exists == 'true'
     run: |
      [ -d ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/ ] && ls -lah ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/
      [ -f ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig ] && cat ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig
      [ -f ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig.in ] && cat ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.kConfig.in
   - name: Cache Config
     if: steps.check_config.outputs.files_exists == 'true'
     uses: actions/cache@v2
     with:
      path: |
       ${{matrix.work}}/${{matrix.arch}}/.config 
       ${{matrix.work}}/${{matrix.arch}}/${{env.KERNEL_IN}}
      key: ${{matrix.work}}_${{matrix.arch}}_config

  #  - name: Cache ${{matrix.work}} json
  #    uses: jossef/action-set-json-field@v1
  #    with:
  #     file: default/work.json
  #     field: ${{matrix.work}}
  #     value: ${{steps.check_work.outputs.files_exists}}

  #  - name: Cache ${{matrix.arch}} json
  #    if:  steps.check_work.outputs.files_exists == 'true'
  #    uses: jossef/action-set-json-field@v1
  #    with:
  #     file: default/work.json
  #     field: openwrt.json
  #     value: ${{steps.check_arch.outputs.files_exists}}

  #  - name: 'Viem JSON'
  #    if: ${{ success() }}
  #    run: |
  #     cat default/work.json     

  Make :
   runs-on: ubuntu-latest
   name: Verify OpenWrt Config   
   needs: verify   
   strategy:
    fail-fast: false
    matrix:
     work: [openwrt,lienol,lede]
     arch: [x86]
   steps:
     - name: Checkout
       uses: actions/checkout@main

     - uses: actions/download-artifact@v2
       with:
         name: ${{matrix.work}}_${{matrix.arch}}_config

     #删除工作件   
     - name: Delete Artifact
       uses: geekyeggo/delete-artifact@v1
       with:
        name: ${{matrix.work}}_${{matrix.arch}}_config
        failOnError: false

     - name: Check ${{matrix.work}} ${{matrix.arch}} Config
       id: check_config
       uses: andstor/file-existence-action@v1.0.1
       with:
         files: "${{matrix.work}}, ${{matrix.work}}/${{matrix.arch}}, ${{matrix.work}}/${{matrix.arch}}/.config,${{matrix.work}}/${{matrix.arch}}/${{env.FEEDS_CONF}}"

     - name: Is Check
       if: steps.check_config.outputs.files_exists == 'true'
       run: |
         echo "有配置文件继续后面流程"
         ls -lah ${{matrix.work}}/${{matrix.arch}}
     
              
  


