name: Build

on:
 push:
 workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'true'

env:
#默认软件包
  FEEDS_CONF: feeds.conf.default
#默认配置文件名
  CONFIG_CONF: config.seed
#默认内核配置
  KERNEL_CONF: kconfig.seed
#默认内核宏文件名
  KERNEL_IN: kConfig.in
#是否开启内容合并
  CONF_ISMERGE: true
#是否自动生成内核宏
  KERNEL_ISMERAGE: false
#是否开启内核文件注入到配置
  IS_KERNEL_CONF: false

defaults:
  run:
    shell: bash

jobs:
  verify :
   runs-on: ubuntu-latest
   name: File Verify ${{matrix.work}} ${{matrix.arch}}
   strategy:
    fail-fast: false
    matrix:
     work: [openwrt,lienol,lede]
     arch: [x86]
   outputs:
    isWork: '{"include":["openwrt":${{env.isopenwrt}},"lede":${{env.islede}},"lienol":${{env.islienol}}]}'
   steps:
   - name: Checkout
     uses: actions/checkout@main
     
   - name: Start SSH via tmate
     uses: P3TERX/ssh2actions@main
     if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
     env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      
   - name: Check work ${{matrix.work}}
     id: check_work
     uses: andstor/file-existence-action@v1.0.1
     with:
      files: "${{matrix.work}}"

   - name: Check ${{matrix.work}} Arch ${{matrix.arch}}
     id: check_arch
     if: steps.check_work.outputs.files_exists == 'true'
     uses: andstor/file-existence-action@v1.0.1
     with:
      files: "${{matrix.work}}/${{matrix.arch}}"

   - name: Check ${{matrix.work}} Arch ${{matrix.arch}} Config
     id: check_config
     if: steps.check_arch.outputs.files_exists == 'true'
     uses: andstor/file-existence-action@v1.0.1
     with:
      files: "${{matrix.work}}/${{matrix.arch}}/${{env.FEEDS_CONF}}, ${{matrix.work}}/${{matrix.arch}}/${{env.CONFIG_CONF}}"
   
   - name: Make Config
     if: steps.check_config.outputs.files_exists == 'true'
     run: |
      if ${{env.CONF_ISMERGE}} ;then
        echo "合并"
        if [ -f ${GITHUB_WORKSPACE}/${{matrix.work}}/default/${{matrix.arch}}/default.seed ] ;then
          cat ${GITHUB_WORKSPACE}/${{matrix.work}}/default/${{matrix.arch}}/default.seed >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.config          
          
        else
          echo "无默认配置无需合并"
        fi
      fi
      cat ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/${{env.CONFIG_CONF}} >> ${GITHUB_WORKSPACE}/${{matrix.work}}/${{matrix.arch}}/.config  

  OpenWrt :
   runs-on: ubuntu-latest
   name: Verify OpenWrt Config   
   needs: verify   
   outputs:
    isx86config: ${{ steps.isx86.outputs.isconfig }}
   steps:
     - name: env
       run:  |
        echo "${{env.isopenwrt}}"
        echo "${{ toJSON(env) }}"

     - name: Dump GitHub context
       env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
       run: echo "$GITHUB_CONTEXT"

     - name: Dump GitHub noeeds
       env:
        NEEDS_CONTEXT: ${{ toJSON(needs) }}
       run: echo "$NEEDS_CONTEXT"

     - name: Dump job context
       env:
        JOB_CONTEXT: ${{ toJSON(job) }}
       run: echo "$JOB_CONTEXT"
     - name: Dump steps context
       env:
        STEPS_CONTEXT: ${{ toJSON(steps) }}
       run: echo "$STEPS_CONTEXT"
     - name: Dump runner context
       env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
       run: echo "$RUNNER_CONTEXT"
     - name: Dump strategy context
       env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
       run: echo "$STRATEGY_CONTEXT"
     - name: Dump matrix context
       env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
       run: echo "$MATRIX_CONTEXT"
       
  X86 :
   runs-on: ubuntu-latest
   name: Make X86 Config
   if: always()
   needs: [Verify]
   steps:
     - name: Make OpenWrt Config
       if: env.islede == 'true'
       run: |
         echo ${{env.islede}}
     - name: Make OpenWrt Config
       id: makex86openwrt
       if: (needs.verify.outputs.isopenwrt == 'true') && (needs.OpenWrt.outputs.isx86config == 'true')
       run: |
         echo 11

     - name: Make Lade Config
       id: makex86lade
       if: (needs.verify.outputs.islede == 'true') && (needs.Lade.outputs.isx86config == 'true')
       run: |
         echo 222

     - name: Make Lienol Config
       id: makex86lienol
       if: (needs.verify.outputs.islienol == 'true') && (needs.Lienol.outputs.isx86config == 'true')
       run: |
         echo 333


